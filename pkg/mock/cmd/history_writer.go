// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardenctl/pkg/cmd (interfaces: HistoryWriter)

// Package cmd is a generated GoMock package.
package cmd

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHistoryWriter is a mock of HistoryWriter interface.
type MockHistoryWriter struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryWriterMockRecorder
}

// MockHistoryWriterMockRecorder is the mock recorder for MockHistoryWriter.
type MockHistoryWriterMockRecorder struct {
	mock *MockHistoryWriter
}

// NewMockHistoryWriter creates a new mock instance.
func NewMockHistoryWriter(ctrl *gomock.Controller) *MockHistoryWriter {
	mock := &MockHistoryWriter{ctrl: ctrl}
	mock.recorder = &MockHistoryWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryWriter) EXPECT() *MockHistoryWriterMockRecorder {
	return m.recorder
}

// WriteStringln mocks base method.
func (m *MockHistoryWriter) WriteStringln(arg0 string, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteStringln", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteStringln indicates an expected call of WriteStringln.
func (mr *MockHistoryWriterMockRecorder) WriteStringln(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteStringln", reflect.TypeOf((*MockHistoryWriter)(nil).WriteStringln), arg0, arg1)
}
